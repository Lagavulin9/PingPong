/*
 * This file was generated by the CommonAPI Generators.
 * Used org.genivi.commonapi.someip 3.2.0.v202012010944.
 * Used org.franca.core 0.13.1.201807231814.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with this file, You can obtain one at
 * http://mozilla.org/MPL/2.0/.
 */
#include <v1/pingpong/PongSomeIPStubAdapter.hpp>
#include <v1/pingpong/Pong.hpp>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#define HAS_DEFINED_COMMONAPI_INTERNAL_COMPILATION_HERE
#endif

#include <CommonAPI/SomeIP/AddressTranslator.hpp>

#if defined (HAS_DEFINED_COMMONAPI_INTERNAL_COMPILATION_HERE)
#undef COMMONAPI_INTERNAL_COMPILATION
#undef HAS_DEFINED_COMMONAPI_INTERNAL_COMPILATION_HERE
#endif

namespace v1 {
namespace pingpong {

std::shared_ptr<CommonAPI::SomeIP::StubAdapter> createPongSomeIPStubAdapter(
                   const CommonAPI::SomeIP::Address &_address,
                   const std::shared_ptr<CommonAPI::SomeIP::ProxyConnection> &_connection,
                   const std::shared_ptr<CommonAPI::StubBase> &_stub) {
    return std::make_shared< PongSomeIPStubAdapter<::v1::pingpong::PongStub>>(_address, _connection, _stub);
}

void initializePongSomeIPStubAdapter() {
    CommonAPI::SomeIP::AddressTranslator::get()->insert(
        "local:pingpong.Pong:v1_0:pingpong.Pong",
         0x4d2, 0x4d2, 1, 0);
    CommonAPI::SomeIP::Factory::get()->registerStubAdapterCreateMethod(
        "pingpong.Pong:v1_0",
        &createPongSomeIPStubAdapter);
}

INITIALIZER(registerPongSomeIPStubAdapter) {
    CommonAPI::SomeIP::Factory::get()->registerInterface(initializePongSomeIPStubAdapter);
}

} // namespace pingpong
} // namespace v1
